use strict;
use warnings;
use File::Spec::Functions;
require ''.catfile(updir, 'genpp.pl');

genheader("VideoWriter");

pp_addpm(<<'EOD');
=head2 open

=for ref

Open writing to given filename. Throws exception if failed.

=for example

  $writer->open($name, $fourcc_code, $fps, $x, $y, $iscolor);
EOD

pp_addxs(<<'EOF');
MODULE = PDL::OpenCV::VideoWriter PACKAGE = PDL::OpenCV::VideoWriter PREFIX=cw_VideoWriter_

void cw_VideoWriter_open(self, name, code, fps, width, height, iscolor)
        PDL__OpenCV__VideoWriter self
        char *name
        char *code
        double fps
        int width
        int height
        char iscolor
CODE:
  SizeWrapper *sw = cw_Size_newWithDims(width, height);
  char ret = cw_VideoWriter_open(self, name, cw_VideoWriter_fourcc(code[0],code[1],code[2],code[3]), fps, sw, iscolor);
  cw_Size_DESTROY(sw);
  if (!ret) {
    PDL->pdl_barf("Error opening file '%s'", name);
  }
EOF

pp_def('write',
        Pars=>'m(l,c,r);',
        OtherPars => 'PDL__OpenCV__VideoWriter wr',
        NoPthread=>1, # I/O
        Code =>pp_line_numbers(__LINE__, <<'EOF'),
                pdl *pid = $PDL(m);
                MatWrapper *mw = cw_Mat_newWithDims($SIZE(l),$SIZE(c),$SIZE(r),pid->datatype,$P(m));
                if (!mw) $CROAK("cw_Mat_newWithDims returned null.");
                cw_VideoWriter_write($COMP(wr), mw);
                cw_Mat_DESTROY(mw);
EOF
        PMCode => 'sub write { _write_int(@_[1,0]) }',
        Doc=>"Write a frame to the file.",
);

pp_done();
