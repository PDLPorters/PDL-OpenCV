pp_addhdr << 'EOH';
 	#include "tracker_wrapper.h"
	TrackerWrapper * tw;
	MatWrapper * mw;

EOH


pp_def ('set_image',
	Pars=>'m(k,l);',
	Code=>pp_line_numbers(__LINE__,
	'
		PDL_Indx ks = $SIZE(k);
		PDL_Indx ls = $SIZE(l);
		//float data[128][128];
		struct MatWrapper* mw  = newMat(ks,ls,cvT.f32c3,$P(m));
		//setData(mw,cvT.f32c1,* $m());
		printf("Hello 42\n");
		//loop (k,l) %{ %};
	'),
	);

pp_def('init_tracker',
	Pars=>'float m(k,l); ushort b(j);',
	# RedoDimsCode=>'$SIZE(l)=3*$SIZE(k); ',
	# GenericTypes => ['F'],
	# OtherPars=>'size_t tracker',
	OtherPars => 'int tracker; TrackerWrapper *  twi; IV  mwi; ' ,#,struct MatWrapper * mw',
	Code=>pp_line_numbers(__LINE__,
	q{
		float myf=$m(k=>48,l=>48);
		printf("48 48%f\\n",myf);
		printf("tracker%d;\\n",$COMP(tracker));
		PDL_Indx ks = $SIZE(k);
		PDL_Indx ls = $SIZE(l);
		struct bBox box;
		box.x=$b(j=>0);
		box.y=$b(j=>1);
		box.width=$b(j=>2);
		box.height=$b(j=>3);
		printf("Hello World\n");
		tw = newTracker($COMP(tracker));
		mw  = newMat(ks,ls,cvT.f32c1,$P(m));
		int res=init_tracker(tw,mw,&box);
		$COMP(twi)  = tw;
		$COMP(mwi)  = mw;
   		printf ("twi %d ",$COMP(twi));
	}
	 ),
	Doc=><<"EOD",
		head2 init_tracker
EOD
);


pp_def('update_tracker',
	Pars=>'float m(k,l); [o] b(j);',
	#OtherPars=>'IV twi;',
	OtherPars => "IV twi; IV mwi",
	Code =>pp_line_numbers(__LINE__,
 	q{
   		printf ("twi %d ",$COMP(twi));
		struct bBox  box;
		mw = $COMP(mwi);
		setData(mw,cvT.f32c1,$P(m));
		tw = $COMP(twi);
		update_tracker(tw,mw,& box);
		$b(j=>0)=box.x;
		$b(j=>1)=box.y;
		$b(j=>2)=box.width;
		$b(j=>3)=box.height;
		return;
	},
	),
	Doc=>"update the tracker box.\n",
	);



pp_add_boot << 'EOB';

	tw_init();
	printf ("init done (autoinclude)\n");


EOB



pp_done();
